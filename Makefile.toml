env_files = [".env"]

[env]
APP_PORT = 8000
REDIS_PORT = 6379
POSTGRES_PORT = 5432
STORAGE_PORT = 9000
STORAGE_CONSOLE_PORT = 9090
KEYCLOAK_PORT = 8080
DATABASE_HOST = "localhost"
DATABASE_USERNAME = "app"
DATABASE_PASSWORD = "passw0rd"
DATABASE_NAME = "app"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${POSTGRES_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"
STORAGE_ENDPOINT = "http://localhost:9000"
STORAGE_USER = "minio_root"
STORAGE_PASSWORD = "minio_password"
KEYCLOAK_USERNAME = "admin"
KEYCLOAK_PASSWORD = "admin"

[config]
default_to_workspace = false

[tasks.env]
command = "printenv"

[tasks.check]
command = "cargo"
args = ["check"]

[tasks.fmt]
command = "cargo"
args = ["fmt", "--all", "${@}"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--all", "--all-targets", "${@}"]

[tasks.watch]
dependencies = ["up-db"]
run_task = [{ name = ["fmt", "clippy"] }]
watch = true

[tasks.run]
command = "cargo"
args = ["run", "${@}"]
dependencies = ["up-db"]

[tasks.test]
command = "cargo"
args = ["test", "${@}"]
dependencies = ["up-db"]

[tasks.docker-run]
command = "docker"
args = ["compose", "up", "--build", "-d"]

[tasks.up]
dependencies = ["docker-run"]

[tasks.up-db]
command = "docker"
args = ["compose", "up", "-d", "postgres"]

[tasks.up-storage]
command = "docker"
args = ["compose", "up", "-d", "minio"]

[tasks.up-kc]
command = "docker"
args = ["compose", "up", "-d", "keycloak"]

[tasks.down]
command = "docker"
args = ["compose", "down", "${@}"]

[tasks.remove]
command = "docker"
args = ["compose", "down", "-v"]

[tasks.migrate]
dependencies = ["up-db"]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help" }
script = '''
#!/bin/bash
until sqlx migrate run --source infrastructure/migrations; do
  sleep 1
done
'''

[tasks.migrate-revert]
dependencies = ["up-db"]
command = "sqlx"
args = ["migrate", "revert", "--source", "infrastructure/migrations"]

[tasks.sqlx]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help" }
command = "sqlx"
args = ["${@}", "--source", "infrastructure/migrations"]

[tasks.psql]
command = "docker"
args = [
  "run", "-it", "--rm",
  "--network", "host",
  "-v", "${PWD}:/work",
  "postgres:15", "psql", "${DATABASE_URL}",
  "${@}"
]

